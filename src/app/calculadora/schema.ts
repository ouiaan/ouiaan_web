import { z } from 'zod';

const clientFacingCategories = [ "Planeación y Pre-Boda", "Cobertura del Evento", "Post-Producción", "Plataforma Digital", "Costos de Estudio y Gestión de Proyecto", ] as const;
export const costItemSchema = z.object({ description: z.string().min(1, "La descripción es requerida."), quantity: z.coerce.number().min(0).default(1), cost: z.coerce.number().min(0).default(0), category: z.enum(clientFacingCategories).default("Cobertura del Evento"), });
export const laborItemSchema = z.object({ description: z.string().min(1, "La descripción es requerida."), hours: z.coerce.number().min(0).default(1), category: z.enum(clientFacingCategories).default("Cobertura del Evento"), });
export const fixedCostItemSchema = z.object({ description: z.string().min(1, "La descripción es requerida."), quantity: z.coerce.number().min(0).default(1), cost: z.coerce.number().min(0).default(0), });
export const categoryDescriptionsSchema = z.object({ "Planeación y Pre-Boda": z.string().optional(), "Cobertura del Evento": z.string().optional(), "Post-Producción": z.string().optional(), "Plataforma Digital": z.string().optional(), "Costos de Estudio y Gestión de Proyecto": z.string().optional(), });
export const finalEstimateSchema = z.object({ companyName: z.string().optional(), companyWebsite: z.string().optional(), companyEmail: z.string().optional(), companyAddress: z.string().optional(), companyPhone: z.string().optional(), companyNotes: z.string().optional(), paymentInstructions: z.string().optional(), includePaymentInfo: z.boolean().default(false), companyLogo: z.string().nullable().optional(), clientName: z.string().min(1, { message: "El nombre es obligatorio." }), eventType: z.string().min(1, { message: "El tipo de evento es obligatorio." }), invoiceNumber: z.string().min(1, { message: "El número es obligatorio." }), categoryDescriptions: categoryDescriptionsSchema.optional(), laborItems: z.array(laborItemSchema).default([]), variableCostItems: z.array(costItemSchema).default([]), fixedCostItems: z.array(fixedCostItemSchema).default([]), defaultLaborRate: z.coerce.number().min(0).default(170), overheadContributionPercentage: z.coerce.number().min(0).max(100).default(21), profitMarginPercentage: z.coerce.number().min(0).max(100).default(20), discountPercentage: z.coerce.number().min(0).max(100).default(0), vatPercentage: z.coerce.number().min(0).max(100).default(0), downPaymentPercentage: z.coerce.number().min(0).max(100).default(50), });
export type FormValues = z.infer<typeof finalEstimateSchema>;
export const getInitialValues = (): FormValues => ({ companyName: '', companyWebsite: '', companyEmail: '', companyAddress: '', companyPhone: '', companyNotes: `- La presente cotización tiene una vigencia de 15 días.\n- Para reservar la fecha es necesario cubrir el 50% de anticipo.\n- El saldo restante deberá ser liquidado 7 días antes de la fecha del evento.`, paymentInstructions: `CLABE Interbancaria: [TU CLABE]\nBanco: [TU BANCO]\nNombre: [TU NOMBRE]\n\nLink de PayPal: [TU LINK]`, includePaymentInfo: false, companyLogo: null, clientName: '', eventType: '', invoiceNumber: '', categoryDescriptions: { "Planeación y Pre-Boda": "", "Cobertura del Evento": "", "Post-Producción": "", "Plataforma Digital": "", "Costos de Estudio y Gestión de Proyecto": "" }, laborItems: [], variableCostItems: [], fixedCostItems: [], defaultLaborRate: 170, overheadContributionPercentage: 21, profitMarginPercentage: 20, discountPercentage: 0, vatPercentage: 0, downPaymentPercentage: 50 });
