'use client';

import Link from 'next/link';
import { usePathname } from 'next/navigation';
import { ChevronDown } from 'lucide-react';
import * as React from 'react';

import { cn } from '@/lib/utils';
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from '@/components/ui/dropdown-menu';

const navLinks = [
  { href: '/freebies', label: 'Freebies' },
  { href: '/color-ai', label: 'Color AI' },
  { href: '/contact', label: 'Contact' },
];

export function Header() {
  const pathname = usePathname();
  const [storeMenuOpen, setStoreMenuOpen] = React.useState(false);

  const NavLink = ({ href, label }: { href: string; label: string }) => (
    <Link href={href} passHref>
      <span
        className={cn(
          'font-headline uppercase tracking-wider text-sm transition-colors duration-300',
          pathname === href
            ? 'text-accent'
            : 'text-foreground/70 hover:text-foreground'
        )}
      >
        {label}
      </span>
    </Link>
  );

  return (
    <header className="sticky top-0 z-40 w-full bg-background/80 backdrop-blur-sm">
      <div className="container mx-auto flex h-20 items-center justify-between">
        <Link href="/" className="flex items-center gap-2">
          <svg
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 637 735"
            className="h-10 w-auto text-foreground"
            fill="currentColor"
          >
            <path
              d="M0 0 C2.29942685 0.01849207 4.59845506 0.02050762 6.89794922 0.02026367 C8.35758815 0.02517138 9.81722434 0.03099641 11.27685547 0.0378418 C11.96529541 0.03895462 12.65373535 0.04006744 13.36303711 0.04121399 C18.16072387 0.08967895 18.16072387 0.08967895 19.27685547 1.20581055 C21.37561388 1.64891503 23.48125372 2.0595335 25.58935547 2.45581055 C54.77808149 8.6008055 77.74757144 28.59163156 93.83007812 52.90356445 C97.68339449 59.03531831 100.63789747 65.47365719 103.27685547 72.20581055 C103.59380371 73.0138916 103.91075195 73.82197266 104.23730469 74.65454102 C108.96028332 87.01770184 111.63233149 99.11743011 112.99902344 112.27075195 C113.24872726 114.41840979 113.24872726 114.41840979 114.27685547 117.20581055 C118.01590894 168.37669131 98.11684099 217.26550143 67.27685547 257.20581055 C66.60009766 258.11202148 65.92333984 259.01823242 65.22607422 259.9519043 C64.29214844 261.19133789 64.29214844 261.19133789 63.33935547 262.45581055 C62.52144531 263.54635742 62.52144531 263.54635742 61.68701172 264.65893555 C61.22166016 265.1694043 60.75630859 265.67987305 60.27685547 266.20581055 C59.61685547 266.20581055 58.95685547 266.20581055 58.27685547 266.20581055 C58.06029297 266.7472168 57.84373047 267.28862305 57.62060547 267.84643555 C55.81111694 271.02356076 53.36473313 273.41510249 50.77685547 275.95581055 C50.23714111 276.48803223 49.69742676 277.02025391 49.14135742 277.56860352 C34.13500606 292.1792947 14.0794047 307.80886365 -7.79736328 307.54174805 C-10.63810929 307.21557427 -12.12359688 306.86405921 -14.41064453 305.20581055 C-19.3876207 298.74919281 -17.75551054 289.06862693 -17.42041016 281.27612305 C-17.2523457 276.13410362 -17.2523457 276.13410362 -19.52001953 271.6550293 C-24.51798022 268.36736367 -29.6586061 268.97901585 -35.28564453 270.01831055 C-48.00523347 273.23152452 -60.06301489 279.42837741 -71.81469727 285.15332031 C-80.2232812 289.23156985 -88.70869182 291.86771542 -97.72314453 294.20581055 C-98.61388672 294.45331055 -99.50462891 294.70081055 -100.42236328 294.95581055 C-113.22149161 298.08496926 -127.60024611 297.55630781 -139.09423828 290.81518555 C-144.29242147 287.19076424 -147.69512389 283.28987248 -149.72314453 277.20581055 C-150.44073409 270.66515818 -149.54225071 265.00518885 -147.72314453 258.70581055 C-145.55938872 251.10948213 -144.04176431 244.33283474 -147.09814453 236.83081055 C-154.71144215 229.21751293 -163.82110558 228.0792217 -174.15673828 228.06518555 C-175.79151791 228.04686429 -177.42628395 228.02729461 -179.06103516 228.0065918 C-181.61311079 227.9776272 -184.16430191 227.95580985 -186.71655273 227.95532227 C-189.19739422 227.95197333 -191.67624503 227.91736015 -194.15673828 227.87768555 C-195.28830605 227.8882901 -195.28830605 227.8882901 -196.44273376 227.89910889 C-202.30179742 227.76568884 -205.22644833 225.93410976 -209.72314453 222.20581055 C-209.63025417 217.65418285 -209.02953737 215.034728 -205.91064453 211.64331055 C-192.09747665 199.09611529 -171.39818015 196.56620407 -153.59814453 194.83081055 C-134.3972595 192.78148906 -113.67223336 189.27014767 -99.96533203 174.28393555 C-96.39831188 169.51432002 -93.79619606 164.78922932 -91.72314453 159.20581055 C-91.27261719 158.09592773 -91.27261719 158.09592773 -90.81298828 156.96362305 C-86.86733282 145.47534249 -88.20785669 132.00313887 -89.21533203 120.07299805 C-91.88255742 87.12692382 -90.3684662 57.29560613 -68.66845703 30.6862793 C-56.59543737 16.70134015 -41.4596279 7.34608263 -23.72314453 2.20581055 C-22.48435547 1.84616211 -21.24556641 1.48651367 -19.96923828 1.1159668 C-13.40256297 -0.30348672 -6.68362029 -0.05582976 0 0 Z"
              transform="translate(367.72314453125,181.794189453125)"
            />
            <path
              d="M0 0 C0.8744577 0.08864319 1.74891541 0.17728638 2.64987183 0.26861572 C17.1652891 1.75723237 31.36444022 3.88883705 45.5625 7.3125 C46.56571289 7.54727051 47.56892578 7.78204102 48.60253906 8.02392578 C80.67312013 15.59347404 80.67312013 15.59347404 91.5625 25.3125 C92.796875 27.4921875 92.796875 27.4921875 93.5625 29.3125 C94.2225 29.3125 94.8825 29.3125 95.5625 29.3125 C96.0625 31.875 96.0625 31.875 95.5625 35.3125 C88.63075488 43.94877261 77.66084188 47.75923488 67.1875 49.9375 C66.23415771 50.1435083 65.28081543 50.3495166 64.29858398 50.56176758 C37.7046465 56.16570228 11.06690986 57.70741132 -16.0625 57.625 C-17.97855545 57.62176727 -17.97855545 57.62176727 -19.93331909 57.61846924 C-89.77877837 57.42929135 -89.77877837 57.42929135 -106.4375 43.3125 C-107.75979189 40.66791621 -107.53427194 38.63488699 -107.5 35.6875 C-107.49097656 34.68460938 -107.48195313 33.68171875 -107.47265625 32.6484375 C-107.46105469 31.87757813 -107.44945312 31.10671875 -107.4375 30.3125 C-112.27035163 27.57056516 -116.59317173 26.50573025 -122 25.6875 C-122.72251953 25.56632813 -123.44503906 25.44515625 -124.18945312 25.3203125 C-135.56189696 23.50545589 -147.07285273 23.15049449 -158.56640625 22.84765625 C-160.5701467 22.78918947 -162.57388693 22.7307136 -164.57761288 22.67175198 C-169.43610192 22.5295856 -174.29475257 22.39358576 -179.15356445 22.26293945 C-206.04131429 21.53468534 -206.04131429 21.53468534 -218.08984375 20.37109375 C-218.88113174 20.29665543 -219.67241974 20.2222171 -220.48768616 20.14552307 C-224.43748945 19.71740475 -227.83641698 19.01238184 -231.4375 17.3125 C-231.4375 16.6525 -231.4375 15.9925 -231.4375 15.3125 C-225.98436735 14.19506869 -220.64754267 14.11069738 -215.10546875 14.03125 C-214.11428543 14.01284058 -213.12310211 13.99443115 -212.10188293 13.97546387 C-208.94297992 13.9169487 -205.78402367 13.86406213 -202.625 13.8125 C-198.47255421 13.74438015 -194.32026017 13.67064857 -190.16796875 13.59375 C-189.2270488 13.58017456 -188.28612885 13.56659912 -187.31669617 13.5526123 C-177.59712581 13.72756119 -177.59712581 13.72756119 -168.4375 11.3125 C-169.7575 10.3225 -171.0775 9.3325 -172.4375 8.3125 C-172.25 6.4375 -172.25 6.4375 -171.4375 4.3125 C-164.96431788 0.58551635 -156.24181705 1.14723279 -148.96484375 1.109375 C-148.06073761 1.10254196 -147.15663147 1.09570892 -146.22512817 1.08866882 C-143.2750475 1.07154183 -140.32512766 1.06532519 -137.375 1.0625 C-135.85409256 1.05949387 -135.85409256 1.05949387 -134.30245972 1.056427 C-116.01202129 1.0476362 -97.95497841 2.15185263 -79.74768066 3.77867126 C-73.21367273 4.35467638 -66.67915763 4.73434251 -60.125 5 C-59.26076416 5.03601318 -58.39652832 5.07202637 -57.50610352 5.10913086 C-51.81565391 5.31993057 -46.13138547 5.34636977 -40.4375 5.3125 C-40.7675 3.6625 -41.0975 2.0125 -41.4375 0.3125 C-28.93092571 -4.51667651 -13.07179599 -1.34944906 0 0 Z"
              transform="translate(386.4375,501.6875)"
            />
          </svg>
        </Link>

        {/* Desktop Navigation */}
        <nav className="hidden items-center gap-8 md:flex">
          <NavLink href="/" label="Home" />
          
          <DropdownMenu open={storeMenuOpen} onOpenChange={setStoreMenuOpen}>
            <DropdownMenuTrigger asChild>
              <button
                onMouseEnter={() => setStoreMenuOpen(true)}
                className={cn(
                    'group flex items-center gap-1 font-headline uppercase tracking-wider text-sm transition-colors duration-300 outline-none',
                    pathname.startsWith('/store')
                    ? 'text-accent'
                    : 'text-foreground/70 hover:text-foreground'
                )}>
                Store
                <ChevronDown className={cn("h-4 w-4 transition-transform duration-200", storeMenuOpen && "rotate-180")} />
              </button>
            </DropdownMenuTrigger>
            <DropdownMenuContent 
              onMouseLeave={() => setStoreMenuOpen(false)}
              className="mt-2"
            >
                <DropdownMenuItem asChild>
                  <Link href="/store/photo">Photo</Link>
                </DropdownMenuItem>
                <DropdownMenuItem asChild>
                  <Link href="/store/video">Video</Link>
                </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>

          {navLinks.map((link) => (
            <NavLink key={link.href} href={link.href} label={link.label} />
          ))}
        </nav>

        {/* Mobile Navigation */}
        <nav className="flex items-center gap-4 md:hidden">
            <NavLink href="/" label="Home" />
            <DropdownMenu>
                <DropdownMenuTrigger asChild>
                <button className={cn(
                    'group flex items-center gap-1 font-headline uppercase tracking-wider text-sm transition-colors duration-300 outline-none',
                    pathname.startsWith('/store')
                    ? 'text-accent'
                    : 'text-foreground/70 hover:text-foreground'
                )}>
                    Store
                    <ChevronDown className="h-4 w-4 transition-transform duration-200 group-data-[state=open]:rotate-180" />
                </button>
                </DropdownMenuTrigger>
                <DropdownMenuContent>
                <DropdownMenuItem asChild>
                    <Link href="/store/photo">Photo</Link>
                </DropdownMenuItem>
                <DropdownMenuItem asChild>
                    <Link href="/store/video">Video</Link>
                </DropdownMenuItem>
                </DropdownMenuContent>
            </DropdownMenu>
            <NavLink href="/contact" label="Contact" />
        </nav>
      </div>
    </header>
  );
}
